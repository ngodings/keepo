import 'dart:convert';

List<MatchResult> matchResultFromJson(String str) => List<MatchResult>.from(
    json.decode(str).map((x) => MatchResult.fromJson(x)));

String matchResultToJson(List<MatchResult> data) =>
    json.encode(List<dynamic>.from(data.map((x) => x.toJson())));

class Data {
  String? id;
  String? name;
  String? type;
  String? language;
  String? createdAt;

  Data({this.id, this.name, this.type, this.language, this.createdAt});

  Data.fromJson(Map<String, dynamic> json) {
    id = json['id'];
    name = json['name'];
    type = json['type'];
    language = json['language'];
    createdAt = json['createdAt'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['type'] = type;
    data['language'] = language;
    data['createdAt'] = createdAt;
    return data;
  }
}

class Autogenerated {
  bool? success;
  String? status;
  String? message;
  String? serverTime;
  List<Data>? data;

  Autogenerated(
      {this.success, this.status, this.message, this.serverTime, this.data});

  Autogenerated.fromJson(Map<String, dynamic> json) {
    success = json['success'];
    status = json['status'];
    message = json['message'];
    serverTime = json['server_time'];
    if (json['data'] != null) {
      data = <Data>[];
      json['data'].forEach((v) {
        data!.add(Data.fromJson(v));
      });
    }
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    data['success'] = success;
    data['status'] = status;
    data['message'] = message;
    data['server_time'] = serverTime;
    if (this.data != null) {
      data['data'] = this.data!.map((v) => v.toJson()).toList();
    }
    return data;
  }
}

class MatchResult {
  String? id;
  String? name;
  String? type;
  String? language;
  String? createdAt;

  MatchResult({this.id, this.name, this.type, this.language, this.createdAt});

  MatchResult.fromJson(Map<String, dynamic> json) {
    id = json['id'];
    name = json['name'];
    type = json['type'];
    language = json['language'];
    createdAt = json['createdAt'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['type'] = type;
    data['language'] = language;
    data['createdAt'] = createdAt;
    return data;
  }
}

// class MatchResult {
//   MatchResult({
//     this.id,
//     this.name,
//     this.language,
//     this.enabled,
//   });

//   final String? id;
//   final String? name;
//   final String? language;
//   final bool? enabled;

//   factory MatchResult.fromJson(Map<String, dynamic> json) => MatchResult(
//         id: json["id"],
//         name: json["name"],
//         language: json["language"],
//         enabled: json["enabled"],
//       );

//   Map<String, dynamic> toJson() => {
//         "id": id,
//         "name": name,
//         "language": language,
//         "enabled": enabled,
//       };
// }


class AllKeywordsData {
  InterestData? interest;
  PersonalityData? personality;
  ProfessionData? profession;

  AllKeywordsData({this.interest, this.personality, this.profession});

  AllKeywordsData.fromJson(Map<String, dynamic> json) {
    interest = json['interest'] != null
        ? InterestData.fromJson(json['interest'])
        : null;
    personality = json['personality'] != null
        ? PersonalityData.fromJson(json['personality'])
        : null;
    profession = json['profession'] != null
        ? ProfessionData.fromJson(json['profession'])
        : null;
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    if (interest != null) {
      data['interest'] = interest!.toJson();
    }
    if (personality != null) {
      data['personality'] = personality!.toJson();
    }
    if (profession != null) {
      data['profession'] = profession!.toJson();
    }
    return data;
  }
}

class InterestData {
  List<InterestResult>? popular;
  List<InterestResult>? most;

  InterestData({this.popular, this.most});

  InterestData.fromJson(Map<String, dynamic> json) {
    if (json['popular'] != null) {
      popular = <InterestResult>[];
      json['popular'].forEach((v) {
        popular!.add(InterestResult.fromJson(v));
      });
    }
    if (json['most'] != null) {
      most = <InterestResult>[];
      json['most'].forEach((v) {
        most!.add(InterestResult.fromJson(v));
      });
    }
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    if (most != null) {
      data['popular'] = most!.map((v) => v.toJson()).toList();
    }
    if (most != null) {
      data['most'] = most!.map((v) => v.toJson()).toList();
    }
    return data;
  }
}

class InterestResult {
  String? interest;

  InterestResult({this.interest});

  InterestResult.fromJson(Map<String, dynamic> json) {
    interest = json['interest'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    data['interest'] = interest;
    return data;
  }
}

class PersonalityData {
  List<PersonalityResult>? popular;
  List<PersonalityResult>? most;

  PersonalityData({this.popular, this.most});

  PersonalityData.fromJson(Map<String, dynamic> json) {
    if (json['popular'] != null) {
      popular = <PersonalityResult>[];
      json['popular'].forEach((v) {
        popular!.add(PersonalityResult.fromJson(v));
      });
    }
    if (json['most'] != null) {
      most = <PersonalityResult>[];
      json['most'].forEach((v) {
        most!.add(PersonalityResult.fromJson(v));
      });
    }
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    if (most != null) {
      data['popular'] = most!.map((v) => v.toJson()).toList();
    }
    if (most != null) {
      data['most'] = most!.map((v) => v.toJson()).toList();
    }
    return data;
  }
}

class PersonalityResult {
  String? personality;

  PersonalityResult({this.personality});

  PersonalityResult.fromJson(Map<String, dynamic> json) {
    personality = json['personality'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    data['personality'] = personality;
    return data;
  }
}

class ProfessionData {
  List<ProfessionResult>? popular;
  List<ProfessionResult>? most;

  ProfessionData({this.popular, this.most});

  ProfessionData.fromJson(Map<String, dynamic> json) {
    if (json['popular'] != null) {
      popular = <ProfessionResult>[];
      json['popular'].forEach((v) {
        popular!.add(ProfessionResult.fromJson(v));
      });
    }
    if (json['most'] != null) {
      most = <ProfessionResult>[];
      json['most'].forEach((v) {
        most!.add(ProfessionResult.fromJson(v));
      });
    }
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    if (most != null) {
      data['popular'] = most!.map((v) => v.toJson()).toList();
    }
    if (most != null) {
      data['most'] = most!.map((v) => v.toJson()).toList();
    }
    return data;
  }
}

class ProfessionResult {
  String? profession;

  ProfessionResult({this.profession});

  ProfessionResult.fromJson(Map<String, dynamic> json) {
    profession = json['profession'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    data['profession'] = profession;
    return data;
  }
}
